/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details take a look at the 'Building Java & JVM projects' chapter in the Gradle
 * User Manual available at https://docs.gradle.org/7.6/userguide/building_java_projects.html
 */

plugins {
  // Apply the application plugin to add support for building a CLI application in Java.
  id 'application'
	// Spring boot Initializr
	id 'java'
  id 'org.springframework.boot' version '3.1.0'
  id 'io.spring.dependency-management' version '1.1.0'

	// eclipse 설정
	id 'eclipse'
}

// Spring boot Initializr
group = 'study'
version = '0.0.1-SNAPSHOT'
//sourceCompatibility = '17'

// CLI 환경에서 'build' 작업을 수행할 때 사용하는 설정
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8' 
    sourceCompatibility = '17'
    targetCompatibility = '17'
}

// eclipse 설정
eclipse {
    project {
        name = "study-app"
    }
    jdt {  
      sourceCompatibility = 17
      targetCompatibility = 17
      javaRuntimeName = "JavaSE-17"
    }
}

configurations {
  compileOnly {
    extendsFrom annotationProcessor
  }
}

repositories {
  // Use Maven Central for resolving dependencies.
  mavenCentral()
}

dependencies {
	// Spring boot Initializr
	implementation 'org.springframework.boot:spring-boot-starter-jdbc'
	// tomcat server -> undertow server
  implementation ('org.springframework.boot:spring-boot-starter-web') {
    exclude group: 'org.springframework.boot', module: 'spring-boot-starter-tomcat'
  }
	implementation 'org.springframework.boot:spring-boot-starter-undertow'

  implementation 'org.mybatis.spring.boot:mybatis-spring-boot-starter:3.0.2'
  compileOnly 'org.projectlombok:lombok'
  developmentOnly 'org.springframework.boot:spring-boot-devtools'
  runtimeOnly 'org.mariadb.jdbc:mariadb-java-client'
  annotationProcessor 'org.springframework.boot:spring-boot-configuration-processor'
  annotationProcessor 'org.projectlombok:lombok'
  testImplementation 'org.springframework.boot:spring-boot-starter-test'

	// Use JUnit test framework.
  testImplementation 'junit:junit:4.13.2'

  // This dependency is used by the application.
  implementation 'com.google.guava:guava:31.1-jre'

}

tasks.named('test') {
  useJUnitPlatform()
}

application {
  // Define the main class for the application.
  mainClass = 'study.app.App'
}
